{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ReceiveLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/uvdsa-announce-bot-dev-receive"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "uvdsa-announce-bot-dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/uvdsa-announce-bot-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/uvdsa-announce-bot-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "EmailHTMLBucket",
                            "Arn"
                          ]
                        },
                        "*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "uvdsa-announce-bot-dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ReceiveLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/uvdsa-announce-bot/dev/1593916537477-2020-07-05T02:35:37.477Z/receive.zip"
        },
        "FunctionName": "uvdsa-announce-bot-dev-receive",
        "Handler": "src/receive.default",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "info"
          }
        }
      },
      "DependsOn": [
        "ReceiveLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ReceiveLambdaVersioneMEMTePLFUYO3g5ZEATbABtqolLYFXUNzsGrAGZpE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ReceiveLambdaFunction"
        },
        "CodeSha256": "YdoSwq4Zh4S0c80fpGjcwwN1aq3oCk7wGnB0WNrIixc="
      }
    },
    "ReceiveSnsSubscriptionUvdsaannouncebotreceivedev": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "EmailUploadedTopic"
        },
        "Protocol": "lambda",
        "Endpoint": {
          "Fn::GetAtt": [
            "ReceiveLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "ReceiveLambdaPermissionUvdsaannouncebotreceivedevSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ReceiveLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "EmailUploadedTopic"
        }
      }
    },
    "LambdaPolicy": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": [
        "LambdaRole"
      ],
      "Properties": {
        "PolicyName": "CFNSESProviderPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "route53:GetHostedZone",
                "route53:ChangeResourceRecordSets",
                "route53:ListResourceRecordSets"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ses:VerifyDomainDkim",
                "ses:DeleteIdentity",
                "ses:VerifyDomainIdentity"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:*"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "LambdaRole"
          }
        ]
      }
    },
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "CFNSESProvider": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "LambdaRole",
        "LambdaPolicy"
      ],
      "Properties": {
        "Description": "CloudFormation SES provider implementation",
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "binxio-public-us-east-1"
          },
          "S3Key": "lambdas/cfn-ses-provider-0.2.3.zip"
        },
        "FunctionName": "binxio-cfn-ses-provider-uvdsa-announce-bot-dev",
        "Handler": "ses.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "LambdaRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 30
      }
    },
    "NotificationReceiveRule": {
      "DependsOn": [
        "S3WritePermissions",
        "EmailEncryptionKey"
      ],
      "Type": "AWS::SES::ReceiptRule",
      "Properties": {
        "RuleSetName": {
          "Fn::ImportValue": "DefaultRuleSetId"
        },
        "Rule": {
          "ScanEnabled": true,
          "Recipients": [
            "dev.uvdsa-announce-bot.bjacobel.com"
          ],
          "Actions": [
            {
              "S3Action": {
                "BucketName": {
                  "Ref": "EmailHTMLBucket"
                },
                "KmsKeyArn": {
                  "Fn::GetAtt": [
                    "EmailEncryptionKey",
                    "Arn"
                  ]
                },
                "TopicArn": {
                  "Ref": "EmailUploadedTopic"
                }
              }
            }
          ],
          "Enabled": true,
          "Name": "uvdsa-announce-bot-dev"
        }
      }
    },
    "EmailEncryptionKey": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "Description": "encrypt emails in the dev uvdsa-announce-bot bucket at rest",
        "Enabled": true,
        "KeyPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "Allow administration by root account",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                }
              },
              "Action": "kms:*",
              "Resource": "*"
            },
            {
              "Sid": "Allow Lambda access for email decryption",
              "Effect": "Allow",
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Resource": "*",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "LambdaRole",
                    "Arn"
                  ]
                }
              }
            },
            {
              "Sid": "Allow SES to encrypt messages",
              "Effect": "Allow",
              "Principal": {
                "Service": "ses.amazonaws.com"
              },
              "Action": [
                "kms:Encrypt",
                "kms:GenerateDataKey*"
              ],
              "Resource": "*",
              "Condition": {
                "Null": {
                  "kms:EncryptionContext:aws:ses:rule-name": false,
                  "kms:EncryptionContext:aws:ses:message-id": false
                },
                "StringEquals": {
                  "kms:EncryptionContext:aws:ses:source-account": {
                    "Fn::Sub": "${AWS::AccountId}"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "EmailEncryptionKeyAlias": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/uvdsa-announce-bot-dev-email-encryptor",
        "TargetKeyId": {
          "Ref": "EmailEncryptionKey"
        }
      }
    },
    "EmailHTMLBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "uvdsa-announce-bot-dev-emails"
      }
    },
    "EmailUploadedTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "uvdsa-announce-bot dev topic for email upload notifications",
        "TopicName": "uvdsa-announce-bot-receive-dev"
      }
    },
    "S3WritePermissions": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "EmailHTMLBucket"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "s3:PutObject",
            "Resource": {
              "Fn::Join": [
                "/",
                [
                  {
                    "Fn::GetAtt": [
                      "EmailHTMLBucket",
                      "Arn"
                    ]
                  },
                  "*"
                ]
              ]
            },
            "Principal": {
              "Service": "ses.amazonaws.com"
            }
          }
        }
      }
    },
    "HostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              "dev.uvdsa-announce-bot.bjacobel.com",
              "."
            ]
          ]
        }
      }
    },
    "MXRecords": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneId": {
          "Ref": "HostedZone"
        },
        "Comment": "MX records for recieving mail",
        "Name": "dev.uvdsa-announce-bot.bjacobel.com",
        "Type": "MX",
        "TTL": 3600,
        "ResourceRecords": [
          "10 inbound-smtp.us-east-1.amazonaws.com"
        ]
      }
    },
    "DKIM": {
      "Type": "Custom::DKIM",
      "DependsOn": "HostedZone",
      "Properties": {
        "HostedZoneId": {
          "Ref": "HostedZone"
        },
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::Sub": "arn:aws:lambda:us-east-1:${AWS::AccountId}:function:binxio-cfn-ses-provider-uvdsa-announce-bot-dev"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ReceiveLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ReceiveLambdaVersioneMEMTePLFUYO3g5ZEATbABtqolLYFXUNzsGrAGZpE"
      }
    }
  }
}